// Autogenerated by Nightwatch
// Refer to the online docs for more details: https://nightwatchjs.org/gettingstarted/configuration/
const Services = {}; loadServices();

module.exports = {
  // An array of folders (excluding subfolders) where your tests are located;
  // if this is not specified, the test source must be passed as the second argument to the test runner.
  // src_folders: ["./tests"],

  // See https://nightwatchjs.org/guide/working-with-page-objects/
  page_objects_path: 'page-objects',

  custom_commands_path: "node_modules/nightwatch-custom-commands-assertions/js/commands",
  custom_assertions_path: "node_modules/nightwatch-custom-commands-assertions/js/assertions",

  // See https://nightwatchjs.org/guide/#external-globals
  globals_path: './globle.js',

  webdriver: {},

  test_settings: {
    default: {
      disable_error_log: true,
      launch_url: 'https://nightwatchjs.org',

      screenshots: {
        enabled: true,
        path: 'screenshots',
        on_failure: true
      },

      desiredCapabilities: {
        browserName: 'chrome',
        chromeOptions: {
          "args": [
            "disable-gpu",
          // "headless",
            "window-size=1850,920",
            "disable-dev-shm-usage"
          ]
        }
      },

      webdriver: {
        start_process: true,
        port: 9516,
        server_path: (Services.chromedriver ? Services.chromedriver.path : ''),
        cli_args: ['--port=9516' ]
          // --verbose
      },

      globals: {
        baseURL: 'https://www.nobroker.in/s',
        email: '',
        password: 'Free@9090',
      }
    },

    firefox: {
      desiredCapabilities: {
        browserName: 'firefox',
        alwaysMatch: {
          // Enable this if you encounter unexpected SSL certificate errors in Firefox
          // acceptInsecureCerts: true,
          'moz:firefoxOptions': {
            args: [
              // '-headless',
              // '-verbose'
            ],
          }
        }
      },
      webdriver: {
        start_process: true,
        port: 4444,
        server_path: (Services.geckodriver ? Services.geckodriver.path : ''),
        cli_args: [
          // very verbose geckodriver logs
          // '-vv'
        ]
      }
    },

  }
};

function loadServices() {
  try {
    Services.seleniumServer = require('selenium-server');
  } catch (err) { }

  try {
    Services.chromedriver = require('chromedriver');
  } catch (err) { }

  try {
    Services.geckodriver = require('geckodriver');
  } catch (err) { }
}
